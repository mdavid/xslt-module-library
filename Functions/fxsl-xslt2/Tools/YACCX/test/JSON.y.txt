%{
# include <stdio.h>
# include <ctype.h>

int regs[26];
int base;

%}

%% /* beginning of rules section */

OBJECT     : '{'     '}'

           | '{'  MEMBERS    '}'
      ;
      
MEMBERS    :  PAIR

           |  PAIR  ','  MEMBERS

       ;

PAIR       : STRING  ':'  VALUE

       ;

ARRAY      : '['    ']'

           | '['  ELEMENTS  ']' 
       ;

ELEMENTS   :  VALUE
          
           |  VALUE  ','  ELEMENTS  

       ;

VALUE      : STRING

           | NUMBER

           | OBJECT

           | ARRAY

           | TRUE

           | FALSE

           | NULL

       ;



STRING     : '\"'   '\"'

           | '\"' CHARS '\"'

       ;

CHARS      : CHAR

           | CHAR CHARS

       ;

NUMBER     : INT

           | INT FRAC

           | INT EXP

           | INT FRAC EXP
       ;

INT        : DIGITS
        
           : '-' DIGITS
       ;

FRAC       : '.' DIGITS

       ;

EXP        : E DIGITS
       ;

DIGITS     : DIGIT

           | DIGIT  DIGITS
       ;

E          : 'e'
    
           | 'e' '+'

           | 'e' '-'

           | 'E'
   
           | 'E' '+'

           | 'E' '-'
       ;



%% /* start of programs */

main ()

{
    while(!feof(stdin)) {
      yyparse();
   }
}

yyerror(char *s)
{  
   fprintf(stderr, "%s\n", s);
}


yylex() {   /* lexical analysis routine */
            /* returns LETTER for a lower case letter, yylval = 0 through 25 */
            /* return DIGIT for a digit, yylval = 0 through 9 */
            /* all other characters are returned immediately */

      int c;

      while( (c=getchar()) == ' ' )   { /* skip blanks */ }

      /* c is now nonblank */
      return( c );
      }
