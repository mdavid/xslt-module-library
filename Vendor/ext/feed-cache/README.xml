<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="file:/C:/Documents%20and%20Settings/M.%20David/My%20Documents/scheme/atom.rnc" type="compact"?>
<entry xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>del.icio.us Social Bookmarking - Creating a reusable copy of a 'tagged' RSS file</title>
    <link rel="current" type="text/html"
        href="http://www.oreillynet.com/xml/blog/2005/09/delicious_social_bookmarking_c.html"/>
    <published>2006-03-31T13:38:10Z</published>
    <updated>2006-03-31T13:40:38Z</updated>
    <id>tag:www.xsltblog.com,2006://1.1529</id>
    <summary type="text">Original post to O'Reilly/XML.com with an explanation of how this code
        works and the various restrictions in relation to del.icio.us you need to be aware of before
        using this code. </summary>
    <content type="xhtml">
        <div xmlns="http://www.w3.org/1999/xhtml">
            <p>
                <strong>Related link:</strong>
                <a href="http://blinqx.net/linq.xml">http://blinqx.net/linq.xml</a>
            </p>
            <p>As mentioned in the intro, the following code will create a local copy of the latest
                RSS feed for any particular tag on <a href="http://del.icio.us">del.icio.us</a>
                social bookmarking. The general idea (at least what I’m using for) is to take a bit
                of the load off the del.icio.us servers, make them available from a site that is
                focused more towards this particular tags content, and as a result be enabled to
                embrace-and-extend from there in any particular direction you feel appropriate.</p>
            <p>See <a href="http://www.xsltblog.com/archives/2005/09/early_availabil.html">this
                post</a> for an idea of what I’m using this for now and some ideas I plan to
                implement as time allows.</p>
            <p>The XML looks like this:</p>

            <pre><code>
                &lt;?xml version="1.0" encoding="UTF-8"?&gt;
                &lt;delicious&gt;
                &lt;tags&gt;
                &lt;tag id="blinqx" saveResult="/srv/www/htdocs/blinqx.net"&gt;All items tagged on del.icio.us as
                blinqx&lt;/tag&gt;
                &lt;tag id="linq" saveResult="/srv/www/htdocs/blinqx.net"&gt;All items tagged on del.icio.us as linq&lt;/tag&gt;
                
                &lt;tag id="xlinq" saveResult="/srv/www/htdocs/blinqx.net"&gt;All items tagged on del.icio.us as
                xlinq&lt;/tag&gt;
                &lt;/tags&gt;
                &lt;/delicious&gt;
            </code></pre>
            <p/>
            <p>The XSLT 2.0 based source looks like this:</p>
            <pre><code>
                &lt;?xml version="1.0" encoding="UTF-8"?&gt;
                
                &lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0"&gt;
                &lt;xsl:output name="xml" method="xml"/&gt;
                &lt;xsl:template match="/"&gt;
                &lt;xsl:apply-templates select="delicious/tags/tag"/&gt;
                &lt;/xsl:template&gt;
                &lt;xsl:template match="tag"&gt;
                
                &lt;xsl:result-document href="file:///{@saveResult}/{concat(@id, '.xml')}"&gt;
                &lt;xsl:copy-of select="document(concat('http://del.icio.us/rss/tag/', @id))"/&gt;
                &lt;/xsl:result-document&gt;
                &lt;/xsl:template&gt;
                &lt;/xsl:stylesheet&gt;
            </code>
            </pre>
            <p>Which, when processed by a series <a href="http://saxonica.com">8.x Saxon
                processor</a> will result in what you find in the files below:</p>

            <p>
                <a href="http://blinqx.net/blinqx.xml">http://blinqx.net/blinqx.xml</a>
                <br/>
                <a href="http://blinqx.net/linq.xml">http://blinqx.net/linq.xml</a>
                <br/>
                <a href="http://blinqx.net/xlinq.xml">http://blinqx.net/xlinq.xml</a>
            </p>
            <p>To get this transformation to run automagically I added the following line to my
                crontab file using ‘crontab -e’ which will run this transformation at :45 minutes
                after each hour. [NOTE: Thanks to <a href="http://www.xml.com/pub/au/84">Uche
                Ogbuji</a> who helped me figure out that I needed to add the directory location of
                the Java run-time as opposed to just using ‘java -jar …’]</p>
            <pre><code>
                45 * * * * /usr/lib/java/bin/java -jar /etc/saxon/latest/saxon8.jar /srv/www/transform/del.icio.us/tags/get.xml /srv/www/transform/del.icio.us/tags/get.xsl
            </code>
            </pre>
            <p>Thats it. Thats all that needs to be done. Now obviously you may run a site whose
                topic is nothing to do with Microsoft’s new Linq and XLinq technologies so changing
                the ‘id’ attribute value to the tag name you desire is an obvious and necessary
                modification. You will also need to change the ’saveResult’ attribute value to the
                location on your server you want it saved such that the results are accessible to
                your site visitors. </p>

            <p>What may not be immediatelly obvious is that you probably don’t have the latest Saxon
                8.x processor contained in the ‘/etc/saxon/latest’ directory. Wherever you unzip and
                store the latest Saxon processor is where this piece of the above crontab entry
                should point to.</p>
            <p>[<b>IMPORTANT!</b>]<br/> Please don’t use this to create a local cache at :45 after
                each hour (or whatever time you decide works best for you) on your personal dev-box
                that you and you alone will access. The idea is to help take some of the load off of
                the <a href="http://del.icio.us">del.icio.us</a> servers by creating a copy(s) of
                the RSS file and allowing your site visitors to add the copied feed(s) to their feed
                readers as opposed to accessing the tagged feed from the <a
                    href="http://del.icio.us">del.icio.us</a> servers.</p>
            <p>Also, as specified on the ‘<a href="http://del.icio.us/doc/about">about</a>‘ page on
                    <a href="http://del.icio.us">del.icio.us</a>:</p>

            <blockquote>
                <p>Please do not poll any single RSS feed more often than every 30 minutes. RSS
                    feeds are not updated more than twice an hour, and you will receive an error if
                    you try to crawl more frequently.</p>
            </blockquote>
            <p>With these two things in mind the above code is licensed under the following terms
                (clicking yes will gain access to the zipped file):</p>
            <blockquote>
                <p>I promise that I won’t make the author of this code regret he ever made this post
                    by using it for my own personal and selfish desires (and thus increasing instead
                    of decreasing the load on the del.icio.us servers) and instead for the greater
                    good of a particular community I take part in.</p>
            </blockquote>
            <p>[<a href="http://www.x2x2x.org/downloads/public/get.zip">Yes, I agree.</a>] [<a
                    href="#" onclick="alert('Well, at least your honest.')">No, I don’t agree.</a>]</p>
            <p>Whichever option you chose, enjoy! </p>
            <p>
                <em>Do you have any other ideas of how something like this could be used. If so,
                    please post the idea with links to any sample code as a comment so that others
                    can gain the benefit as well.</em>
            </p>
        </div>
    </content>
</entry>
